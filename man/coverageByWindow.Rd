% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shift_footprints_helpers.R
\name{coverageByWindow}
\alias{coverageByWindow}
\title{Compute coverage for every GRangesList subset.}
\usage{
coverageByWindow(x, windows, ignore.strand = FALSE)
}
\arguments{
\item{x}{the cigar of the reads}

\item{windows}{(GRangesList) of transcripts or CDS or other ranges that will
be subseting coverage of \code{x}}

\item{ignore.strand}{(logical) Whether to consider all reads to be "*".}
}
\value{
(RleList) of positional counts of \code{x} ranges overlapping each
consecutive position of the elements of \code{windows}
}
\description{
This is similar to \code{\link[GenomicFeatures]{coverageByTranscript}}, but
it adds: automatic sorting of the windows, fix for some rare cases when
subsetting fails on minus/plus strands and security that subseting of windows
will always return values (zeros) istead of out of bounds error.
}
\details{
Minus strand is already flipped so that the most 5' position on the window
is the first position in the returned Rle.
}
\examples{
cds <- GenomicRanges::GRangesList(
  GenomicRanges::GRanges(seqnames = "chr1",
                         ranges = IRanges::IRanges(100, 200),
                         strand = "+"))
reads <- GenomicRanges::GRanges(
  seqnames = "chr1",
  ranges =  IRanges::IRanges(c(100, 150), c(110, 160)),
  strand = "+")
ORFik:::coverageByWindow(reads, cds)

}
