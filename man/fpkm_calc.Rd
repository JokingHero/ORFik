% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature_methods.R
\name{fpkm_calc}
\alias{fpkm_calc}
\title{Create normalizations of counts}
\usage{
fpkm_calc(counts, lengthSize, librarySize)
}
\arguments{
\item{counts}{a list of integer counts per object}

\item{lengthSize}{a list of integer lengths per object}

\item{librarySize}{a numeric of size 1, the size of the library}
}
\value{
a numeric vector
}
\description{
Normally use function \code{\link{fpkm}}, if you want unusual normalization
, you can use this.
Short for: Fragments per kilobase of transcript per million fragments
Normally used in Translations efficiency calculations
see article: 10.1038/nbt.1621
}
\seealso{
Other features: \code{\link{ORFScores}},
  \code{\link{OrfRankOrder}},
  \code{\link{RibosomeReleaseScore}},
  \code{\link{RibosomeStallingScore}},
  \code{\link{allFeatures}},
  \code{\link{calculateCoverage}},
  \code{\link{disengagementScore}},
  \code{\link{distOrfToCds}}, \code{\link{entropy}},
  \code{\link{floss}}, \code{\link{fpkm}},
  \code{\link{fractionLength}},
  \code{\link{inFrameWithCDS}},
  \code{\link{insideOutsideORF}},
  \code{\link{isOverlappingCds}},
  \code{\link{kozakSequenceScore}},
  \code{\link{subset_coverage}}, \code{\link{te}}
}
