% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CageData_Integration.R
\name{reassignTSSbyCage}
\alias{reassignTSSbyCage}
\title{Reassign all Transcript start sites(tss')}
\usage{
reassignTSSbyCage(fiveUTRs, cage, extension = 1000, filterValue = 1,
  cds = NULL)
}
\arguments{
\item{fiveUTRs}{The 5' leader or transcript
sequences as GRangesList}

\item{cage}{Either a  filePath for cage-file, or already loaded R-object as GRanges}

\item{extension}{The maximum number of basses upstream the
cage-peak can be from original tss}

\item{filterValue}{The number of counts(score) to filter on,
for a tss to pass as hit}

\item{cds}{If you want to extend 5' leaders downstream,
to catch upstream ORFs going into cds, include it.}
}
\value{
a GRangesList
}
\description{
Given a GRangesList of 5' utrs or transcripts, reassign the start
 postitions. A max peak is defined as new tss if it is within boundary
 of 5'leader range, specified by extension
 A max peak must also be greater that the cage peak cutoff specified
 in filterValue
 The new TSS will then be the position of the cage read,
 with highest read count in the interval.
}
\details{
This method can also be used with other ngs methods, if i.g. if you have a
list of possible cds starts (with scores) and cds'. It would reassign the
cds starts.
}
\examples{
samplefile <- system.file("extdata", "hg19_knownGene_sample.sqlite",
package = "GenomicFeatures")
txdb <- loadDb(samplefile)
fiveUTRs <- fiveUTRsByTranscript(txdb) # <- extract only 5' leaders
cds <- cdsBy(txdb)
# make some fake cage data
cage <- GRanges(seqnames = as.character(seqnames(fiveUTRs)[1:2]),
               ranges =  IRanges(as.integer(start(fiveUTRs)[1 : 2] - 500),
                                 as.integer(start(fiveUTRs)[1 : 2])),
               strand = as.character(strand(fiveUTRs)[1 : 2]),
                score = c(5, 10))
test_result <- reassignTSSbyCage(fiveUTRs[1], cage = cageEqualStart,
 cds = cds)
}
